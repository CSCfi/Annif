swagger: '2.0'
info:
  title: Annif REST API
  version: v1
schemes:
  - http
basePath: /v1/
parameters:
  project_id:
    name: project_id
    in: path
    description: project identifier
    required: true
    type: string
  subject_id:
    name: subject_id
    in: path
    description: subject identifier
    required: true
    type: string
paths:
  /projects:
    get:
      summary: get a list of projects
      produces:
        - application/json
      responses:
        '200':
          description: succesful operation
          schema:
            $ref: '#/definitions/ProjectList'
      tags:
        - Project administration
  '/projects/{project_id}':
    get:
      summary: show project information
      parameters:
        - $ref: '#/parameters/project_id'
      responses:
        '200':
          description: succesful operation
          schema:
            $ref: '#/definitions/Project'
        '404':
          description: project not found
      tags:
        - Project administration
    put:
      summary: create or update project
      parameters:
        - $ref: '#/parameters/project_id'
        - name: project
          in: body
          description: the project to create
          schema:
            $ref: '#/definitions/Project'
      consumes:
        - application/json
      responses:
        '204':
          description: 'succesful operation, no content returned'
        '409':
          description: 'the project already exists, with incompatible settings'
      tags:
        - Project administration
    delete:
      summary: delete a project
      parameters:
        - $ref: '#/parameters/project_id'
      responses:
        '204':
          description: 'succesful operation, no content returned'
        '404':
          description: project not found
      tags:
        - Project administration
  '/projects/{project_id}/subjects':
    get:
      summary: get a list of all subjects defined for a project
      parameters:
        - $ref: '#/parameters/project_id'
      responses:
        '200':
          description: succesful operation
        '404':
          description: project not found
      tags:
        - Subject index administration
  '/projects/{project_id}/subjects/{subject_id}':
    get:
      summary: show subject information
      parameters:
        - $ref: '#/parameters/project_id'
        - $ref: '#/parameters/subject_id'
      produces:
        - application/json
      responses:
        '200':
          description: succesful operation
        '404':
          description: project or subject not found
      tags:
        - Subject index administration
    put:
      summary: create or update subject information
      parameters:
        - $ref: '#/parameters/project_id'
        - $ref: '#/parameters/subject_id'
      consumes:
        - application/json
      responses:
        '204':
          description: 'succesful operation, no content returned'
        '404':
          description: project or subject not found
      tags:
        - Subject index administration
    delete:
      summary: delete subject information
      parameters:
        - $ref: '#/parameters/project_id'
        - $ref: '#/parameters/subject_id'
      responses:
        '204':
          description: 'succesful operation, no content returned'
        '404':
          description: project or subject not found
      tags:
        - Subject index administration
  '/projects/{project_id}/analyze':
    post:
      summary: suggest subjects for a given text
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/project_id'
        - name: text
          in: formData
          description: text to analyze
          required: true
          type: string
        - name: limit
          in: formData
          description: maximum number of results to return
          required: false
          type: integer
          default: 12
        - name: threshold
          in: formData
          description: >-
            minimum score threshold, expressed as a fraction of highest score
            (normalized score), below which results will not be returned
          required: false
          type: number
          default: 0.45
        - name: normalize_scores
          in: formData
          description: >-
            whether to normalize the returned scores to the range [0..1] (true,
            default) or to return the raw scores (false)
          required: false
          type: boolean
          default: true
      responses:
        '200':
          description: successful operation
      tags:
        - Automatic subject indexing
definitions:
  Project:
    description: A project definition
    properties:
      projectid:
        type: string
        example: my-project
      language:
        type: string
        example: en
      analyzer:
        type: string
        example: english
    required:
      - projectid
      - language
      - analyzer
  ProjectList:
    properties:
      projects:
        type: array
        items:
          $ref: '#/definitions/Project'
